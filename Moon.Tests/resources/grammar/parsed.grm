START -> PROG

PROG -> CLASSDECL FUNCDEF main FUNCBODY

CLASSDECL -> class id inherits id , id { VISIBILITY MEMBERDECL } ;

FUNCDEF -> FUNCHEAD FUNCBODY ;

STAT -> IDNEST id STAT1

STAT -> if ( RELEXPR ) then STATBLOCK else STATBLOCK ;

STAT -> while ( RELEXPR ) STATBLOCK ;

STAT -> read ( VAR ) ;

STAT -> write ( EXPR ) ;

STAT -> return ( EXPR ) ;

STAT1 -> INDEX ASSIGNOP EXPR ;

STAT1 -> ( APARAMS ) ;

EXPR -> ARITHEXPR EXPR1

EXPR1 -> RELOP ARITHEXPR

EXPR1 -> .

ARITHEXPR -> TERM ARITHEXPR1

ARITHEXPR1 -> .

ARITHEXPR1 -> ADDOP TERM ARITHEXPR1

RELEXPR -> ARITHEXPR RELOP ARITHEXPR

IDNEST -> id IDNEST1

IDNEST1 -> INDEX .

IDNEST1 -> ( APARAMS ) .

FUNCCALL -> IDNEST id ( APARAMS )

ASSIGNSTAT -> VAR ASSIGNOP EXPR

VISIBILITY -> public

VISIBILITY -> private

FUNCHEAD -> id :: id ( FPARAMS ) : FUNCHEAD1

FUNCHEAD1 -> TYPE

FUNCHEAD1 -> void

APARAMSTAIL -> , EXPR

MEMBERDECL -> id MEMBERDECL1

MEMBERDECL -> integer id ARRAYSIZE ;

MEMBERDECL -> float id ARRAYSIZE ;

MEMBERDECL1 -> ( FPARAMS ) : FUNCDECL1

MEMBERDECL1 -> id ARRAYSIZE ;

FUNCDECL -> id ( FPARAMS ) : FUNCDECL1

FUNCDECL1 -> TYPE ;

FUNCDECL1 -> void ;

VARDECL -> integer id ARRAYSIZE ;

VARDECL -> float id ARRAYSIZE ;

VARDECL -> id id ARRAYSIZE ;

FPARAMSTAIL -> , TYPE id ARRAYSIZE

APARAMS -> EXPR APARAMSTAIL

APARAMS -> .

FPARAMS -> TYPE id ARRAYSIZE FPARAMSTAIL

FPARAMS -> .

INDEX -> [ ARITHEXPR ]

FUNCBODY -> local VARDECL do STAT end

STATBLOCK -> do STAT end

STATBLOCK -> STAT

STATBLOCK -> .

VAR -> IDNEST id INDEX

FACTOR -> IDNEST id FACTOR1

FACTOR -> intnum

FACTOR -> floatnum

FACTOR -> ( ARITHEXPR )

FACTOR -> not FACTOR

FACTOR -> SIGN FACTOR

FACTOR1 -> INDEX

FACTOR1 -> ( APARAMS )

TERM -> FACTOR TERM1

TERM1 -> .

TERM1 -> MULTOP FACTOR TERM1

ARRAYSIZE -> [ ARRAYSIZE1

ARRAYSIZE1 -> intnum ]

ARRAYSIZE1 -> ]

TYPE -> integer

TYPE -> float

TYPE -> id

ASSIGNOP -> =

SIGN -> +

SIGN -> -

RELOP -> ==

RELOP -> <>

RELOP -> <

RELOP -> >

RELOP -> <=

RELOP -> >=

MULTOP -> *

MULTOP -> /

MULTOP -> and

ADDOP -> +

ADDOP -> -

ADDOP -> or

